gg.plot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer), col = 'red')
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer), col = 'red')
before_woolsey <- raster("/Users/richy/Downloads/Classes/1.00/Final Project/Fireproof/Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
before_woolsey_df <- rasterToPoints(before_woolsey) %>% data.frame()
before_woolsey_df <- rasterToPoints(before_woolsey)
before_woolsey_df <- data.frame(before_woolsey_df)
after_woolsey_df <- raster("/Users/richy/Downloads/Classes/1.00/Final Project/Fireproof/Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-12-01.tif")
after_woolsey_dataframe <- rasterToPoints(after_woolsey_df)
after_woolsey_dataframe <- data.frame(after_woolsey_dataframe)
par(mfrow = c(1,2))
before_woolsey
after_woolsey_df
ggplot() + geom_raster(data = before_woolsey_df, aes(x = x, y = y, fill = lfmc_map_2018.11.01)) + ggtitle("Fuel Content Before Woolsey Fire") + coord_equal()
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
ggplot() + geom_raster(data = before_woolsey_df, aes(x = x, y = y, fill = lfmc_map_2018.11.01)) + ggtitle("Fuel Content Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = before_woolsey_df, aes(x = x, y = y, fill = lfmc_map_2018.11.01), col = 'green') + ggtitle("Fuel Content Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = before_woolsey_df, aes(x = x, y = y, fill = lfmc_map_2018.11.01, colour = "SpringGreen4")) + ggtitle("Fuel Content Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = after_woolsey_dataframe, aes(x = x, y = y, fill = lfmc_map_2018.12.01)) + ggtitle("Fuel Content After Woolsey Fire") + coord_equal()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
wind <- raster("Downloading GeoTIFF/Extracted Files/wind/my_export_la_20181101.tif")
wind_df <- rasterToPoints(wind) %>%
data.frame()
temp <- raster("Downloading GeoTIFF/Extracted Files/temperature/my_export_la_2018_11_01.tif")
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
temp_df <- rasterToPoints(temp) %>%
data.frame()
combined_score <- (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer), col = 'red')
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer, color = 'red'))
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer, color = 'red')) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", color = Red(100)) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", colors = Red(100)) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", colors = Rainbow(100)) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", colors = red(100)) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", colors = rainbow(100)) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", colors = ("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", colors = ("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Risk", colors = c("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
combined_score <- 1/1000 * (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Relative Risk", colors = c("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
combined_score <- 1/8000 * (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
combined_score <- 1/80 * (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Relative Risk", colors = c("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
lfmc
ggplot()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
ggplot() + geom_raster(data = lfmc, aes(x = x, y = y, fill = lfmc_map_2018.11.01)) + ggtitle("Fuel Amount Before Woolsey Fire") + coord_equal()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
ggplot() + geom_raster(data = lfmc, aes(x = x, y = y, fill = lfmc_map_2018.11.01)) + ggtitle("Fuel Amount Before Woolsey Fire") + coord_equal()
rlang::last_error()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
ggplot() + geom_raster(data = lfmc_df, aes(x = x, y = y, fill = lfmc_map_2018.11.01)) + ggtitle("Fuel Amount Before Woolsey Fire") + coord_equal()
ggplot()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
ggplot() + geom_raster(data = lfmc_df, aes(x = x, y = y, fill = lfmc_map_2018.11.01)) + ggtitle("Fuel Amount Before Woolsey Fire") + coord_equal()
wind <- raster("Downloading GeoTIFF/Extracted Files/wind/my_export_la_20181101.tif")
wind_df <- rasterToPoints(wind) %>%
data.frame()
temp <- raster("Downloading GeoTIFF/Extracted Files/temperature/my_export_la_2018_11_01.tif")
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
temp_df <- rasterToPoints(temp) %>%
data.frame()
combined_score <- 1/80 * (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Relative Risk", colors = c("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
wind <- raster("Downloading GeoTIFF/Extracted Files/wind/my_export_la_20181101.tif")
wind_df <- rasterToPoints(wind) %>%
data.frame()
temp <- raster("Downloading GeoTIFF/Extracted Files/temperature/my_export_la_2018_11_01.tif")
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
temp_df <- rasterToPoints(temp) %>%
data.frame()
combined_score <- 1/80 * (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Relative Risk", colors = c("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
wind <- raster("Downloading GeoTIFF/Extracted Files/wind/my_export_la_20181101.tif")
wind_df <- rasterToPoints(wind) %>%
data.frame()
temp <- raster("Downloading GeoTIFF/Extracted Files/temperature/my_export_la_2018_11_01.tif")
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
temp_df <- rasterToPoints(temp) %>%
data.frame()
combined_score <- 1/80 * (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Relative Risk", colors = c("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
ggplot()
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
wind <- raster("Downloading GeoTIFF/Extracted Files/wind/my_export_la_20181101.tif")
wind_df <- rasterToPoints(wind) %>%
data.frame()
temp <- raster("Downloading GeoTIFF/Extracted Files/temperature/my_export_la_2018_11_01.tif")
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
wind <- raster("Downloading GeoTIFF/Extracted Files/wind/my_export_la_20181101.tif")
wind_df <- rasterToPoints(wind) %>%
data.frame()
temp <- raster("Downloading GeoTIFF/Extracted Files/temperature/my_export_la_2018_11_01.tif")
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
lfmc <- raster("Downloading GeoTIFF/Extracted Files/lfmc/lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>%
data.frame()
lfmc
wind <- raster("Downloading GeoTIFF/Extracted Files/wind/my_export_la_20181101.tif")
wind_df <- rasterToPoints(wind) %>%
data.frame()
temp <- raster("Downloading GeoTIFF/Extracted Files/temperature/my_export_la_2018_11_01.tif")
# In LST data, it says that there is a 0.02 scaling factor for Kelvin. Convert K > C > F
temp <- 1.8*(0.02*temp - 273.15) + 32
temp_df <- rasterToPoints(temp) %>%
data.frame()
combined_score <- 1/80 * (max(wind-30, 0) + max(temp-40, 0)) * lfmc
combined_score_df <- rasterToPoints(combined_score) %>%
data.frame()
ggplot() + geom_raster(data = combined_score_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Relative Risk", colors = c("green", "red")) + ggtitle("Estimated Wildfire Risk Before Woolsey Fire") + coord_equal()
high_wind_df <- rasterToPoints(high_wind) %>% data.frame()
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp - 273.15) + 32
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
surface_wind <- raster("0m wind/my_export_201811.tif")
# surface_wind_df <- rasterToPoints(surface_wind) %>% data.frame()
high_wind <- raster("10m wind/my_export_20181101.tif")
# high_wind_df <- rasterToPoints(high_wind) %>% data.frame()
min_humidity <- raster("min humidity/my_export_20181101.tif")
# min_humidity_df <- rasterToPoints(min_humidity) %>% data.frame()
max_humidity <- raster("max humidity/my_export_20181101.tif")
# max_humidity_df <- rasterToPoints(max_humidity) %>% data.frame()
temp <- raster("lst/my_export_2018_11_01.tif")
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp - 273.15) + 32
# conversion of surface and high wind to mph
surface_wind <- surface_wind * 2.23694
high_wind <- high_wind * 2.23694
# overall humidity
overall_humidity <- (min_humidity + max_humidity)/2
lfmc_tf <- if (10 < lfmc < 20) {1} else {0}
lfmc_tf <- if ((10 < lfmc) & (lfmc < 20)) {1} else {0}
# lfmc_tf <- if ((10 < lfmc) & (lfmc < 20)) {1} else {0}
lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) & (x <= 20)) {1} else {0}})
# lfmc_tf <- if ((10 < lfmc) & (lfmc < 20)) {1} else {0}
lfmc_tf <- calc(lfmc, fun = function(x) {if (10 <= x <= 20) {1} else {0}})
# lfmc_tf <- if ((10 < lfmc) & (lfmc < 20)) {1} else {0}
lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
# temp_tf <-  if (20 < temp < 60) {1} else {0}
temp_tf <- calc(temp, fun = function(x) if ((20 <= temp) && (temp <= 60)) {1} else {0})
# temp_tf <-  if (20 < temp < 60) {1} else {0}
temp_tf <- calc(temp, fun = function(x) {if ((20 <= temp) && (temp <= 60)) {1} else {0}})
# lfmc_tf <- if ((10 < lfmc) & (lfmc < 20)) {1} else {0}
lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
# temp_tf <-  if (20 < temp < 60) {1} else {0}
temp_tf <- calc(temp, fun = function(x) {if ((20 <= temp) && (temp <= 60)) {1} else {0}})
# temp_tf <-  if (20 < temp < 60) {1} else {0}
temp_tf <- calc(temp, fun = function(x) {if ((20 <= x) && (x <= 60)) {1} else {0}})
# overall_humidity_tf <- if (40 < overall_humidity < 55) {1} else {0}
# surface_wind_tf <- if (1 < surface_wind < 3) {1} else {0}
surface_wind_tf <- calc(surface_wind, fun = function(x) {if ((1 <= x) && (x <= 3)) {1} else {0}})
# overall_humidity_tf <- if (40 < overall_humidity < 55) {1} else {0}
# surface_wind_tf <- if (1 < surface_wind < 3) {1} else {0}
surface_wind_tf <- calc(surface_wind, fun = function(x) {if ((1 <= x) && (x <= 3)) {1} else {0}})
# temp_tf <-  if (20 < temp < 60) {1} else {0}
temp_tf <- calc(temp, fun = function(x) {if ((20 <= x) && (x <= 60)) {1} else {0}})
# i guess there is something off about the surface wind dataset?
# surface_wind_tf <- calc(surface_wind, fun = function(x) {if ((1 <= x) && (x <= 3)) {1} else {0}})
high_wind_tf <- calc(high_wind, fun = function(x) {if ((6 <= x) && (x <= 18)) {1} else {0}})
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp-273.15)+32
# conversion of surface and high wind to mph
surface_wind <- surface_wind*2.23694
# conversion of surface and high wind to mph
surface_wind <- surface_wind*2.23694
surface_wind
high_wind <- high_wind*2.23694
# overall humidity
overall_humidity <- (min_humidity + max_humidity)/2
lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
temp_tf <- calc(temp, fun = function(x) {if ((20 <= x) && (x <= 60)) {1} else {0}})
overall_humidity_tf <- if (40 < overall_humidity < 55) {1} else {0}
# overall_humidity_tf <- if (40 < overall_humidity < 55) {1} else {0}
overall_humidity_tf <- calc(overall_humidity, fun = function(x) {if ((40 <= x) && (x <= 55)) {1} else {0}})
# overall_humidity_tf <- if (40 < overall_humidity < 55) {1} else {0}
overall_humidity_tf <- calc(overall_humidity, fun = function(x) {if ((40.0 <= x) && (x <= 55.0)) {1} else {0}})
# overall_humidity_tf <- if (40 < overall_humidity < 55) {1} else {0}
overall_humidity_tf <- calc(overall_humidity, fun = function(x) {if ((40.000 <= x) && (x <= 55.000)) {1} else {0}})
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
surface_wind <- raster("0m wind/my_export_201811.tif")
# surface_wind_df <- rasterToPoints(surface_wind) %>% data.frame()
high_wind <- raster("10m wind/my_export_20181101.tif")
# high_wind_df <- rasterToPoints(high_wind) %>% data.frame()
min_humidity <- raster("min humidity/my_export_20181101.tif")
# min_humidity_df <- rasterToPoints(min_humidity) %>% data.frame()
max_humidity <- raster("max humidity/my_export_20181101.tif")
# max_humidity_df <- rasterToPoints(max_humidity) %>% data.frame()
temp <- raster("lst/my_export_2018_11_01.tif")
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp-273.15)+32
# conversion of surface and high wind to mph
# surface_wind <- surface_wind*2.23694
# high_wind <- high_wind*2.23694
# overall humidity
overall_humidity <- (min_humidity + max_humidity)/2
lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
temp_tf <- calc(temp, fun = function(x) {if ((20 <= x) && (x <= 60)) {1} else {0}})
# overall_humidity_tf <- if (40 < overall_humidity < 55) {1} else {0}
overall_humidity_tf <- calc(overall_humidity, fun = function(x) {if ((40 <= x) && (x <= 55)) {1} else {0}})
# i guess there is something off about the surface wind dataset?
# surface_wind_tf <- calc(surface_wind, fun = function(x) {if ((1 <= x) && (x <= 3)) {1} else {0}})
# something is also off about the high wind dataset
high_wind_tf <- calc(high_wind, fun = function(x) {if ((6 <= x) && (x <= 18)) {1} else {0}})
if (6 < high_wind < 18) {1} else {0}
# i guess there is something off about the surface wind dataset?
surface_wind_tf <- calc(surface_wind, fun = function(x) {if ((1 <= x) && (x <= 3)) {1} else {0}})
# something is also off about the high wind dataset
high_wind_tf <- calc(high_wind, fun = function(x) {if ((6 <= x) && (x <= 18)) {1} else {0}})
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
surface_wind <- raster("0m wind/my_export_201811.tif")
surface_wind_df <- rasterToPoints(surface_wind) %>% data.frame()
surface_wind_df
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
lfmc_df
if (1.01 > 1) {1} else {0}
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
# lfmc_df
surface_wind <- raster("0m wind/my_export_201811.tif")
surface_wind_tf <- calc(surface_wind, fun = function(x) {if (1 <= x) {1} else {0}})
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
# lfmc_df
lfmc_tf <- calc(lfmc, fun = function(x) {if (1 <= x) {1} else {0}})
surface_wind <- raster("0m wind/my_export_201811.tif")
surface_wind_tf <- calc(surface_wind, fun = function(x) {if (1 <= x) {1} else {0}})
# surface_wind_df <- rasterToPoints(surface_wind) %>% data.frame()
# surface_wind_df
high_wind <- raster("10m wind/my_export_20181101.tif")
# high_wind_df <- rasterToPoints(high_wind) %>% data.frame()
min_humidity <- raster("min humidity/my_export_20181101.tif")
# min_humidity_df <- rasterToPoints(min_humidity) %>% data.frame()
max_humidity <- raster("max humidity/my_export_20181101.tif")
# max_humidity_df <- rasterToPoints(max_humidity) %>% data.frame()
temp <- raster("lst/my_export_2018_11_01.tif")
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp-273.15)+32
# conversion of surface and high wind to mph
surface_wind <- surface_wind*2.23694
high_wind <- high_wind*2.23694
# overall humidity
overall_humidity <- (min_humidity + max_humidity)/2
lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
# lfmc_df
lfmc_tf <- calc(lfmc, fun = function(x) {if ((1 <= x) && (x <= 3)) {1} else {0}})
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
# lfmc_df
lfmc_tf <- calc(lfmc, fun = function(x) {if (1 <= x) {1} else {0}})
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
# lfmc_df
surface_wind <- raster("0m wind/my_export_201811.tif")
# surface_wind_df <- rasterToPoints(surface_wind) %>% data.frame()
# surface_wind_df
high_wind <- raster("10m wind/my_export_20181101.tif")
# high_wind_df <- rasterToPoints(high_wind) %>% data.frame()
min_humidity <- raster("min humidity/my_export_20181101.tif")
# min_humidity_df <- rasterToPoints(min_humidity) %>% data.frame()
max_humidity <- raster("max humidity/my_export_20181101.tif")
# max_humidity_df <- rasterToPoints(max_humidity) %>% data.frame()
temp <- raster("lst/my_export_2018_11_01.tif")
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp-273.15)+32
# conversion of surface and high wind to mph
surface_wind <- surface_wind*2.23694
high_wind <- high_wind*2.23694
# overall humidity
overall_humidity <- (min_humidity + max_humidity)/2
# lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
lfmc_tf <- ifelse(((10 <= x) && (x <= 20)), 1, 0)
# lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
lfmc_tf <- ifelse(((10 <= lfmc) && (lfmc <= 20)), 1, 0)
# lfmc_tf <- calc(lfmc, fun = function(x) {if ((10 <= x) && (x <= 20)) {1} else {0}})
lfmc_tf <- calc(lfmc, ifelse(((10 <= lfmc) && (lfmc <= 20)), 1, 0))
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
# lfmc_df
lfmc_lwr_bd <- setValues(lfmc, 10)
lfmc_upr_bd <- setValues(lfmc, 20)
truth <- overlay(lfmc, lfmc_lwr_bd, lfmc_upr_bd, fun = function(x1,x2,x3) {if ((x2 <= x1) && (x1 <= x3)) {1} else {0}})
lfmc_upr_bd <- setValues(lfmc, 20)
truth <- overlay(lfmc, lfmc_lwr_bd, lfmc_upr_bd, fun = function(x1,x2,x3) {ifelse(((x2 <= x1) && (x1 <= x3)),1,0)})
lfmc_upr_bd <- setValues(lfmc, 20)
truth <- overlay(lfmc, lfmc_lwr_bd, fun = function(x1,x2) {ifelse(x2 <= x1,1,0)})
truth_df <- rasterToPoints(truth) %>% data.frame()
truth_df
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
# lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
# lfmc_df
lfmc_lwr_bd <- setValues(lfmc, 10)
lfmc_upr_bd <- setValues(lfmc, 20)
# truth <- overlay(lfmc, lfmc_lwr_bd, fun = function(x1,x2) {ifelse(x2 <= x1,1,0)})
truth <- overlay(lfmc, lfmc_lwr_bd, lfmc_upr_bd, fun = function(x1,x2,x3) {ifelse(x2 <= x1 && x1 <= x3,1,0)})
# truth <- overlay(lfmc, lfmc_lwr_bd, fun = function(x1,x2) {ifelse(x2 <= x1,1,0)})
truth <- overlay(lfmc, lfmc_lwr_bd, lfmc_upr_bd, fun = function(x1,x2,x3) {ifelse(x2 <= x1 & x1 <= x3,1,0)})
truth_df <- rasterToPoints(truth) %>% data.frame()
truth_df
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
lfmc <- raster("lfmc/my_export_lfmc_map_2018-11-01.tif")
lfmc_df <- rasterToPoints(lfmc) %>% data.frame()
lfmc_df
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
surface_wind <- raster("0m wind/my_export_201811.tif")
surface_wind_lwr_bd <- setValue(surface_wind ,1)
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
surface_wind <- raster("0m wind/my_export_201811.tif")
surface_wind_lwr_bd <- setValues(surface_wind ,1)
surface_wind_upr_bd <- setValues(surface_wind, 3)
high_wind <- raster("10m wind/my_export_20181101.tif")
high_wind_lwr_bd <- setValues(surface_wind, 6)
high_wind_upr_bd <- setValues(surface_wind, 18)
min_humidity <- raster("min humidity/my_export_20181101.tif")
max_humidity <- raster("max humidity/my_export_20181101.tif")
temp <- raster("lst/my_export_2018_11_01.tif")
temp_lwr_bd <- setValues(temp, 20)
temp_upr_bd <- setValues(temp, 60)
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp-273.15)+32
# conversion of surface and high wind to mph
surface_wind <- surface_wind*2.23694
high_wind <- high_wind*2.23694
# overall humidity
overall_humidity <- (min_humidity + max_humidity)/2
overall_humidity_lwr_bd <- setValues(overall_humidity, 40)
overall_humidity_upr_bd <- setValues(overall_humidity, 55)
within_bounds = function(x1,x2,x3){
ifelse(x2<=x1&x1<=x3,1,0)
}
temp_tf <- overlay(temp, temp_lwr_bd, temp_upr_bd, fun = within_bounds)
overall_humidity_tf <- overlay(overall_humidity, overall_humidity_lwr_bd, overall_humidity_upr_bd, fun = within_bounds)
surface_wind_tf <- overlay(surface_wind, surface_wind_lwr_bd, surface_wind_upr_bd, fun = within_bounds)
high_wind_tf <- overlay(high_wind, high_wind_lwr_bd, high_wind_upr_bd, fun = within_bounds)
overall_value <- temp_tf + overall_humidity_tf + surface_wind_tf + high_wind_tf
overall_value <- temp_tf + overall_humidity_tf + surface_wind_tf + high_wind_tf
ggplot() + geom_raster(data = overall_value, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Optimality of Weather Conditions for Prescribed Burn", colors = c("green", "red")) + ggtitle("Estimated Favorability of Weather Conditions for a Prescribed Burn") + coord_equal()
overall_value_df <- rasterToPoints(overall_value) %>% data.frame()
ggplot() + geom_raster(data = overall_value, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Optimality of Weather Conditions for Prescribed Burn", colors = c("green", "red")) + ggtitle("Estimated Favorability of Weather Conditions for a Prescribed Burn") + coord_equal()
overall_value_df <- rasterToPoints(overall_value) %>% data.frame()
ggplot() + geom_raster(data = overall_value_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Optimality of Weather Conditions for Prescribed Burn", colors = c("green", "red")) + ggtitle("Estimated Favorability of Weather Conditions for a Prescribed Burn") + coord_equal()
ggplot() + geom_raster(data = overall_value_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Optimality of Weather Conditions for Prescribed Burn", colors = c("red", "green")) + ggtitle("Estimated Favorability of Weather Conditions for a Prescribed Burn") + coord_equal()
overall_value_df <- rasterToPoints(overall_value) %>% data.frame()
overall_value
import.packages("pacman")
library(pacman)
pacman::p_load(pacman, dplyr, raster, sf, rgdal, rasterVis, ggplot2)
# loading all of the data
surface_wind <- raster("0m wind/my_export_201811.tif")
surface_wind_lwr_bd <- setValues(surface_wind ,1)
surface_wind_upr_bd <- setValues(surface_wind, 3)
high_wind <- raster("10m wind/my_export_20181101.tif")
high_wind_lwr_bd <- setValues(surface_wind, 6)
high_wind_upr_bd <- setValues(surface_wind, 18)
min_humidity <- raster("min humidity/my_export_20181101.tif")
max_humidity <- raster("max humidity/my_export_20181101.tif")
temp <- raster("lst/my_export_2018_11_01.tif")
temp_lwr_bd <- setValues(temp, 20)
temp_upr_bd <- setValues(temp, 60)
# conversion of temp from Kelvin to Celsius to Fahrenheit
temp <- 1.8*(0.02*temp-273.15)+32
# conversion of surface and high wind to mph
surface_wind <- surface_wind*2.23694
high_wind <- high_wind*2.23694
# overall humidity
overall_humidity <- (min_humidity + max_humidity)/2
overall_humidity_lwr_bd <- setValues(overall_humidity, 40)
overall_humidity_upr_bd <- setValues(overall_humidity, 55)
within_bounds = function(x1,x2,x3){
ifelse(x2<=x1&x1<=x3,1,0)
}
temp_tf <- overlay(temp, temp_lwr_bd, temp_upr_bd, fun = within_bounds)
overall_humidity_tf <- overlay(overall_humidity, overall_humidity_lwr_bd, overall_humidity_upr_bd, fun = within_bounds)
surface_wind_tf <- overlay(surface_wind, surface_wind_lwr_bd, surface_wind_upr_bd, fun = within_bounds)
high_wind_tf <- overlay(high_wind, high_wind_lwr_bd, high_wind_upr_bd, fun = within_bounds)
overall_value <- temp_tf + overall_humidity_tf + surface_wind_tf + high_wind_tf
overall_value_df <- rasterToPoints(overall_value) %>% data.frame()
overall_value
png("testimg.png", 1370, 988)
ggplot() + geom_raster(data = overall_value_df, aes(x = x, y = y, fill = layer)) + scale_fill_gradientn(name = "Optimality of Weather Conditions for Prescribed Burn", colors = c("red", "green")) + ggtitle("Estimated Favorability of Weather Conditions for a Prescribed Burn") + coord_equal()
dev.off()
